"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1513],{5535:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"Components/surface/switch","title":"Switch","description":"Este componente representa un interruptor (switch) que permite al usuario activar o desactivar una opci\xf3n. Es \xfatil para situaciones en las que se necesita un control de estado binario (encendido/apagado).","source":"@site/docs/Components/surface/Switch.md","sourceDirName":"Components/surface","slug":"/Components/surface/switch","permalink":"/documentation-projects/docs/Components/surface/switch","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/surface/Switch.md","tags":[],"version":"current","frontMatter":{"id":"switch","title":"Switch"},"sidebar":"tutorialSidebar","previous":{"title":"Ventana emergente","permalink":"/documentation-projects/docs/Components/surface/popup-windows"},"next":{"title":"Tabla","permalink":"/documentation-projects/docs/category/tabla"}}');var s=t(4848),d=t(8453);const i={id:"switch",title:"Switch"},c="Switch",r={},a=[{value:"Propiedades",id:"propiedades",level:3},{value:"Comportamiento",id:"comportamiento",level:3},{value:"Ejemplo de uso",id:"ejemplo-de-uso",level:3}];function l(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"switch",children:"Switch"})}),"\n",(0,s.jsx)(n.p,{children:"Este componente representa un interruptor (switch) que permite al usuario activar o desactivar una opci\xf3n. Es \xfatil para situaciones en las que se necesita un control de estado binario (encendido/apagado)."}),"\n",(0,s.jsx)(n.p,{children:"El componente permite controlar el estado interno (activo/desactivado) de manera controlada o no controlada, seg\xfan lo que el usuario decida al momento de utilizarlo. Adem\xe1s, el componente puede estar habilitado o deshabilitado seg\xfan la necesidad del usuario."}),"\n",(0,s.jsx)(n.h3,{id:"propiedades",children:"Propiedades"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Tipo"}),(0,s.jsx)(n.th,{children:"Descripci\xf3n"}),(0,s.jsx)(n.th,{children:"Requerido"}),(0,s.jsx)(n.th,{children:"Valor Predeterminado"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"initialChecked"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsxs)(n.td,{children:["Estado inicial del switch. Indica si el switch debe estar activado o desactivado al cargar el componente. El valor predeterminado es ",(0,s.jsx)(n.code,{children:"false"})," (desactivado)."]}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isChecked"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Si se proporciona, controla el estado del switch de manera externa (componente controlado). Si no se proporciona, el componente gestiona su estado internamente."}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"N/A"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onChange"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"function"})}),(0,s.jsxs)(n.td,{children:["Funci\xf3n que se ejecuta cada vez que el estado del switch cambia. Recibe el nuevo estado (",(0,s.jsx)(n.code,{children:"true"})," o ",(0,s.jsx)(n.code,{children:"false"}),") como argumento."]}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"N/A"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isDisabled"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsxs)(n.td,{children:["Si se establece en ",(0,s.jsx)(n.code,{children:"true"}),", el switch ser\xe1 deshabilitado y no podr\xe1 ser interactuado. El valor predeterminado es ",(0,s.jsx)(n.code,{children:"false"})," (habilitado)."]}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"comportamiento",children:"Comportamiento"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["El switch se puede controlar de manera interna o externa. Si no se pasa la propiedad ",(0,s.jsx)(n.code,{children:"isChecked"}),", el componente maneja su propio estado."]}),"\n",(0,s.jsxs)(n.li,{children:["Si el switch est\xe1 deshabilitado (",(0,s.jsx)(n.code,{children:"isDisabled=true"}),"), el usuario no podr\xe1 interactuar con \xe9l."]}),"\n",(0,s.jsxs)(n.li,{children:["El estado del switch cambia cuando el usuario hace clic sobre \xe9l, y el nuevo estado se pasa a trav\xe9s de la funci\xf3n ",(0,s.jsx)(n.code,{children:"onChange"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ejemplo-de-uso",children:"Ejemplo de uso"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<Switch initialChecked={true} onChange={(checked) => console.log(checked)} />\r\n<Switch isChecked={false} onChange={(checked) => console.log(checked)} />\r\n<Switch isChecked={true} isDisabled={true} onChange={(checked) => console.log(checked)} />\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var o=t(6540);const s={},d=o.createContext(s);function i(e){const n=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);